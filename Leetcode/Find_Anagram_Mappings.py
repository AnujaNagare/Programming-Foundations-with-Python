# Find Anagram Mappings

# my solution
def anagramMappings(A, B):
    """
    :type A: List[int]
    :type B: List[int]
    :rtype: List[int]
     """

    p = list()
    
    if len(A)==len(B) and len(A)<=100 :
     	dict1={}
     	n=len(A)
     	for i in range(n):
     		key=B[i]
     		value=i
     		dict1[key]=value

     	for i in range(n):
     		p.append(dict1[A[i]])

    return p

time complexity: O(N)

# # given solution 
# # Complexity Analysis
# #  Time Complexity: O(N), where N is the length of A.
# #  Space Complexity: O(N).

# def anagramMappings(A, B):
#     D = {x: i for i, x in enumerate(B)}
#     return [D[x] for x in A]

A = [12, 28, 46, 32, 50]
B = [50, 12, 32, 46, 28]

# # A = [84,8,0,84,0,84]
# # B = [84,84,8,0,0,84]

# A = [43560,43475,69547,29810,40264,53269,17710,39994,45844,52869,67291,88248,9043,54721,69083,93551,42410,51605,39006,34617,70257,78171,64448,79456,42016,11664,2468,91969,46731,54320,5881,93835,21707,50276,16954,45754,72327,12267,15839,18849,10935,86865,31179,70805,861,89380,85395,37685,35988,22399,65446,89518,87777,70913,94050,19519,32337,6471,5199,80772,51038,17061,50871,15559,72431,78446,60361,6776,31653,21756,14899,97226,1933,65870,591,76267,61862,74422,53429,95603,70312,43408,30257,54172,99791,21407,42909,96179,64853,77416,24428,68408,21827,4981,72940,99041,52118,94881,31780,84763]
# B = [89380,6776,78171,93835,70913,99041,50871,42410,94050,78446,87777,50276,1933,53269,31653,79456,5881,52869,591,64448,21707,43408,42016,70312,37685,86865,65446,17710,72940,45754,30257,65870,45844,72431,12267,54172,31780,52118,42909,84763,54721,97226,60361,91969,24428,46731,4981,19519,69083,18849,21827,70257,43560,14899,29810,85395,80772,89518,11664,22399,96179,2468,21756,72327,95603,31179,94881,74422,53429,17061,77416,69547,15559,861,67291,64853,34617,68408,54320,39006,40264,9043,93551,16954,88248,51038,35988,43475,76267,21407,51605,70805,6471,61862,5199,15839,99791,10935,32337,39994]



print(anagramMappings(A,B))